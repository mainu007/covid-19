{"version":3,"sources":["components/countryPicker/CountryPicker.module.css","App.module.css","components/cards/Cards.module.css","components/cards/card/Card.module.css","components/chart/Chart.module.css","components/table/Table.module.css","images/image.png","components/cards/card/Card.jsx","components/cards/progress/Progress.jsx","components/cards/Cards.jsx","api/index.js","components/chart/Chart.jsx","components/countryPicker/switch/Switch.jsx","components/countryPicker/CountryPicker.jsx","components/table/TableData.jsx","components/table/Table.jsx","App.js","index.js"],"names":["module","exports","value","date","title","comment","borderStyle","borderColor","Grid","item","xs","md","component","Card","className","styles","card","style","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","Date","toDateString","useStyles","makeStyles","theme","root","width","marginTop","spacing","Progress","classes","LinearProgress","data","confirmed","deaths","recovered","lastUpdate","loading","container","justify","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyDate","map","reportDate","total","fetchCountries","countries","name","fetchConfirmed","useState","dailyData","setDailyData","useEffect","myFetch","chartLine","labels","datasets","label","fill","backgroundColor","chartBar","options","legend","display","text","IOSSwitch","withStyles","height","padding","margin","overflow","switchBase","transform","palette","common","white","opacity","border","thumb","track","borderRadius","grey","transition","transitions","create","checked","focusVisible","props","Switch","focusVisibleClassName","disableRipple","CustomizedSwitches","handleChartChange","React","checkedA","checkedB","checkedC","state","setState","FormGroup","FormControlLabel","labelPlacement","control","onChange","event","target","handleChange","chartShow","setCountries","FormControl","formControl","disabled","NativeSelect","defaultValue","e","i","key","TableData","this","TableRow","TableCell","scope","align","Component","maxHeight","StickyHeadTable","Paper","TableContainer","Table","stickyHeader","aria-label","TableHead","TableBody","App","handleCountryChange","image","src","alt","Cards","CountryPicker","Chart","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef076be4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CountryPicker_container__1Sfnt\",\"formControl\":\"CountryPicker_formControl__l7FIF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2rcre\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__hIWS2\",\"Infected\":\"Card_Infected__2zRjj\",\"Recovered\":\"Card_Recovered__31Btq\",\"Deaths\":\"Card_Deaths__3QKbh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2Qe1l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Table_container__2Z5cX\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";","import React from \"react\";\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\nimport CountUp from \"react-countup\";\nimport styles from \"./Card.module.css\";\n\nexport default ({ value, date, title, comment, borderColor }) => {\n  const borderStyle = { borderColor };\n  return (\n    <Grid\n      item\n      xs={12}\n      md={3}\n      component={Card}\n      className={styles.card}\n      style={borderStyle}\n    >\n      <CardContent>\n        <Typography color=\"textSecondary\" gutterBottom>\n          {title}\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n          <CountUp start={0} end={value} duration={2.75} separator=\",\" />\n        </Typography>\n        <Typography color=\"textSecondary\">\n          {new Date(date).toDateString()}\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          {comment}\n        </Typography>\n      </CardContent>\n    </Grid>\n  );\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"370px\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function Progress() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <LinearProgress />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport styles from \"./Cards.module.css\";\nimport Card from \"./card/Card.jsx\";\nimport Progress from \"./progress/Progress\";\n\nexport default ({\n  data: { confirmed, deaths, recovered, lastUpdate },\n  loading,\n}) => {\n  if (loading) {\n    return <Progress />;\n  }\n\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\">\n        <Card\n          value={confirmed.value}\n          date={lastUpdate}\n          title=\"Infected\"\n          comment=\"Number of active cases of COVID-19.\"\n          borderColor=\"rgba(0, 0, 255, 0.5)\"\n        />\n        <Card\n          value={recovered.value}\n          date={lastUpdate}\n          title=\"Recovered\"\n          comment=\"Number of recoveries from COVID-19.\"\n          borderColor=\"rgba(0, 255, 0, 0.5)\"\n        />\n        <Card\n          value={deaths.value}\n          date={lastUpdate}\n          title=\"Deaths\"\n          comment=\"Number of deaths caused by COVID-19.\"\n          borderColor=\"rgba(255, 0, 0, 0.5)\"\n        />\n      </Grid>\n    </div>\n  );\n};\n","import axios from \"axios\";\n\nconst url = \"https://covid19.mathdro.id/api\";\n\nexport const fetchData = async (country) => {\n  let changeableUrl = url;\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n  try {\n    const {\n      data: { confirmed, deaths, recovered, lastUpdate },\n    } = await axios.get(changeableUrl);\n    return { confirmed, deaths, recovered, lastUpdate };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchDailyDate = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n    return data.map(({ confirmed, deaths, reportDate: date }) => ({\n      confirmed: confirmed.total,\n      deaths: deaths.total,\n      date,\n    }));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const {\n      data: { countries },\n    } = await axios.get(`${url}/countries`);\n    return countries.map(({ name }) => name);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchConfirmed = async (country) => {\n  try {\n    return await axios.get(`${url}/countries/${country}/confirmed`);\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport { fetchDailyDate } from \"../../api\";\nimport { Bar, Line } from \"react-chartjs-2\";\nimport styles from \"./Chart.module.css\";\n\nexport default ({ data: { confirmed, recovered, deaths }, country }) => {\n  const [dailyData, setDailyData] = useState({});\n  useEffect(() => {\n    const myFetch = async () => {\n      setDailyData(await fetchDailyDate());\n    };\n    myFetch();\n  });\n\n  const chartLine = dailyData[0] ? (\n    <Line\n      data={{\n        labels: dailyData.map(({ date }) => date),\n        datasets: [\n          {\n            data: dailyData.map(({ confirmed }) => confirmed),\n            label: \"Infected\",\n            borderColor: \"#3333ff\",\n            fill: true,\n          },\n          {\n            data: dailyData.map(({ deaths }) => deaths),\n            label: \"Deaths\",\n            borderColor: \"red\",\n            backgroundColor: \"rgba(255,0,0,0.5)\",\n            fill: true,\n          },\n        ],\n      }}\n    />\n  ) : null;\n\n  const chartBar = country ? (\n    <Bar\n      data={{\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\n        datasets: [\n          {\n            label: \"People\",\n            backgroundColor: [\n              \"rgba(0,0,255,0.5)\",\n              \"rgba(0,255,0,0.5)\",\n              \"rgba(255,0,0,0.5)\",\n            ],\n            data: [confirmed.value, recovered.value, deaths.value],\n          },\n        ],\n      }}\n      options={{\n        legend: { display: false },\n        title: { display: true, text: `Current state in ${country}` },\n      }}\n    />\n  ) : null;\n\n  return (\n    <div className={styles.container}>{country ? chartBar : chartLine}</div>\n  );\n};\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\n\nconst IOSSwitch = withStyles((theme) => ({\n  root: {\n    width: 42,\n    height: 26,\n    padding: 0,\n    margin: theme.spacing(1),\n    overflow: \"unset\",\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(16px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#52d869\",\n        opacity: 1,\n        border: \"none\",\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#52d869\",\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 24,\n    height: 24,\n  },\n  track: {\n    borderRadius: 26 / 2,\n    border: `1px solid ${theme.palette.grey[400]}`,\n    backgroundColor: theme.palette.grey[50],\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n  },\n  checked: {},\n  focusVisible: {},\n}))(({ classes, ...props }) => {\n  return (\n    <Switch\n      focusVisibleClassName={classes.focusVisible}\n      disableRipple\n      classes={{\n        root: classes.root,\n        switchBase: classes.switchBase,\n        thumb: classes.thumb,\n        track: classes.track,\n        checked: classes.checked,\n      }}\n      {...props}\n    />\n  );\n});\n\nexport default function CustomizedSwitches({ handleChartChange }) {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: false,\n    checkedC: true,\n  });\n\n  const handleChange = (event) => {\n    handleChartChange();\n    setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  return (\n    <FormGroup>\n      <FormControlLabel\n        label=\"Show all Countries\"\n        labelPlacement=\"start\"\n        control={\n          <IOSSwitch\n            checked={state.checkedB}\n            onChange={handleChange}\n            name=\"checkedB\"\n          />\n        }\n      />\n    </FormGroup>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { FormControl, NativeSelect } from \"@material-ui/core\";\nimport { fetchCountries } from \"../../api\";\nimport styles from \"./CountryPicker.module.css\";\nimport Switch from \"./switch/Switch.jsx\";\n\nexport default ({ handleChange, handleChartChange, chartShow, loading }) => {\n  const [countries, setCountries] = useState([]);\n\n  useEffect(() => {\n    const myFetch = async () => {\n      setCountries(await fetchCountries());\n    };\n    myFetch();\n  });\n\n  if (loading) {\n    return null;\n  }\n\n  return (\n    <div className={styles.container}>\n      <FormControl className={styles.formControl} disabled={!chartShow}>\n        <NativeSelect\n          defaultValue=\"\"\n          onChange={(e) => handleChange(e.target.value)}\n        >\n          <option value=\"\">Global</option>\n          {countries.map((country, i) => (\n            <option value={country} key={i}>\n              {country}\n            </option>\n          ))}\n        </NativeSelect>\n      </FormControl>\n      <div>\n        <Switch handleChartChange={handleChartChange} />\n      </div>\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { fetchConfirmed } from \"../../api\";\n\nexport default class TableData extends Component {\n  state = {\n    confirmed: null,\n    recovered: null,\n    deaths: null,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: [value],\n      } = await fetchConfirmed(this.props.country);\n\n      if (value.confirmed) {\n        this.setState({\n          confirmed: value.confirmed,\n          recovered: value.recovered,\n          deaths: value.deaths,\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    const { confirmed, recovered, deaths } = this.state;\n    const { country } = this.props;\n    return (\n      <TableRow>\n        <TableCell component=\"th\" scope=\"row\">\n          {country}\n        </TableCell>\n        <TableCell>{new Date().toDateString()}</TableCell>\n        <TableCell align=\"right\">{confirmed}</TableCell>\n        <TableCell align=\"right\">{recovered}</TableCell>\n        <TableCell align=\"right\">{deaths}</TableCell>\n      </TableRow>\n    );\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport styles from \"./Table.module.css\";\nimport { fetchCountries } from \"../../api\";\nimport TableData from \"./TableData\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n  },\n  container: {\n    maxHeight: 440,\n  },\n});\n\nexport default function StickyHeadTable() {\n  const [countries, setCountries] = useState([]);\n\n  useEffect(() => {\n    const myFetch = async () => {\n      setCountries(await fetchCountries());\n    };\n    myFetch();\n  });\n\n  const classes = useStyles();\n\n  return (\n    <div className={styles.container}>\n      <Paper className={classes.root}>\n        <TableContainer className={classes.container}>\n          <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>State</TableCell>\n                <TableCell>Last Update</TableCell>\n                <TableCell align=\"right\">Infected</TableCell>\n                <TableCell align=\"right\">Recovered</TableCell>\n                <TableCell align=\"right\">Deaths</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {countries.map((value) => (\n                <TableData key={value} country={value} />\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Paper>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Cards, Chart, CountryPicker, Table } from \"./components\";\nimport { fetchData } from \"./api\";\nimport styles from \"./App.module.css\";\nimport image from \"./images/image.png\";\n\nexport default class App extends Component {\n  state = {\n    data: {},\n    country: \"\",\n    loading: true,\n    chartShow: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const data = await fetchData();\n      this.setState({ data, loading: false });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  handleCountryChange = async (country) => {\n    const data = await fetchData(country);\n    this.setState({ data, country });\n  };\n\n  handleChartChange = () => {\n    this.state.chartShow\n      ? this.setState({ chartShow: false })\n      : this.setState({ chartShow: true });\n  };\n\n  render() {\n    const { data, loading, country, chartShow } = this.state;\n    return (\n      <div className={styles.container}>\n        <img className={styles.image} src={image} alt=\"COVID-19\" />\n        <Cards data={data} loading={loading} />\n        <CountryPicker\n          handleChartChange={this.handleChartChange}\n          handleChange={this.handleCountryChange}\n          chartShow={chartShow}\n          loading={loading}\n        />\n        {chartShow ? <Chart data={data} country={country} /> : <Table />}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}