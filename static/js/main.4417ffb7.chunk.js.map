{"version":3,"sources":["api/index.js","components/Cards/CardItem.js","components/Cards/index.js","components/CountryPicker.js","components/Chart/BarGrap.js","components/Chart/LineGrap.js","components/Chart/index.js","components/Progress.js","components/Tables.js","App.js","serviceWorker.js","index.js","App.module.css","images/image.png"],"names":["url","fetchData","country","changeableUrl","fetch","then","response","json","catch","err","console","log","fetchCountries","useStyles","makeStyles","root","minWidth","borderTop","props","borderColor","title","fontSize","pos","marginTop","today","total","date","classes","Card","className","CardContent","Typography","color","gutterBottom","variant","component","start","end","duration","separator","Date","toDateString","data","todayCases","todayRecovered","todayDeaths","cases","recovered","deaths","updated","Grid","container","spacing","item","md","xs","CardItem","theme","textAlign","formControl","margin","width","maxWidth","selectEmpty","CountryPicker","onHandler","useState","countryValue","setCountryValue","FormControl","Select","value","onChange","event","target","displayEmpty","inputProps","MenuItem","map","key","countryInfo","iso2","BarGrap","labels","datasets","label","backgroundColor","options","legend","display","text","LineGrap","confirmed","fill","setData","useEffect","error","lastDataPoint","ChartData","newDataPoint","push","bieldChartData","Progress","LinearProgress","StyledTableCell","withStyles","head","palette","primary","main","common","white","body","TableCell","StyledTableRow","action","hover","TableRow","height","breakpoints","down","table","CustomizedTables","TableContainer","Paper","Table","size","stickyHeader","aria-label","TableHead","align","TableBody","scope","active","App","state","countriesData","loading","initData","setState","fetchCountriesData","countryPickerHandler","this","Container","styles","logoContainer","src","CovidLogo","logoImage","alt","sm","Cards","Chart","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.4417ffb7.chunk.js","sourcesContent":["const url = \"https://disease.sh/v3/covid-19\";\n\nexport const fetchData = (country) => {\n   let changeableUrl = `${url}/all`;\n   if (country) {\n      changeableUrl = `${url}/countries/${country}`;\n   }\n   return fetch(changeableUrl)\n      .then((response) => response.json())\n      .catch((err) => console.log(err));\n};\n\nexport const fetchCountries = () => {\n   return fetch(`${url}/countries`)\n      .then((response) => response.json())\n      .catch((err) => console.log(err));\n};\n\nexport const fetchTotalData = () => {\n   return fetch(`${url}/historical/all?lastdays=120`)\n      .then((response) => response.json())\n      .catch((err) => console.log(err));\n};\n","import React from \"react\";\nimport CountUp from \"react-countup\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles({\n   root: {\n      minWidth: \"100%\",\n      borderTop: (props) => `8px solid ${props.borderColor}`,\n   },\n   title: {\n      fontSize: 16,\n   },\n   pos: {\n      marginTop: 12,\n   },\n});\n\nexport default (props) => {\n   const { title, today, total, date } = props;\n   const classes = useStyles(props);\n\n   return (\n      <Card className={classes.root}>\n         <CardContent>\n            <Typography\n               className={classes.title}\n               color=\"textSecondary\"\n               gutterBottom\n            >\n               {title}\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n               +\n               <CountUp start={0} end={today} duration={2} separator=\",\" />\n            </Typography>\n            <Typography className={classes.pos}>\n               <CountUp start={0} end={total} duration={2} separator=\",\" />{\" \"}\n               Total\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\" color=\"textSecondary\">\n               {new Date(date).toDateString()}\n            </Typography>\n         </CardContent>\n      </Card>\n   );\n};\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CardItem from \"./CardItem\";\n\nexport default ({ data }) => {\n   const {\n      todayCases,\n      todayRecovered,\n      todayDeaths,\n      cases,\n      recovered,\n      deaths,\n      updated,\n   } = data;\n\n   return (\n      <Grid container spacing={2}>\n         <Grid item md={4} xs={12}>\n            <CardItem\n               title=\"Infected\"\n               today={todayCases}\n               total={cases}\n               date={updated}\n               borderColor=\"rgba(0, 0, 255, 0.5)\"\n            />\n         </Grid>\n         <Grid item md={4} xs={12}>\n            <CardItem\n               title=\"Recovered\"\n               today={todayRecovered}\n               total={recovered}\n               date={updated}\n               borderColor=\"rgba(0, 255, 0, 0.5)\"\n            />\n         </Grid>\n         <Grid item md={4} xs={12}>\n            <CardItem\n               title=\"Deaths\"\n               today={todayDeaths}\n               total={deaths}\n               borderColor=\"rgba(255, 0, 0, 0.5)\"\n               date={updated}\n            />\n         </Grid>\n      </Grid>\n   );\n};\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nconst useStyles = makeStyles((theme) => ({\n   container: {\n      textAlign: \"center\",\n   },\n   formControl: {\n      margin: theme.spacing(1),\n      width: 350,\n      maxWidth: \"100%\",\n      textAlign: \"left\",\n   },\n   selectEmpty: {\n      marginTop: theme.spacing(2),\n   },\n}));\n\nexport default function CountryPicker({ onHandler, data }) {\n   const classes = useStyles();\n   const [countryValue, setCountryValue] = useState(\"\");\n   const handleChange = (event) => {\n      setCountryValue(event.target.value);\n      onHandler(event.target.value);\n   };\n\n   return (\n      <div className={classes.container}>\n         <FormControl className={classes.formControl}>\n            <Select\n               value={countryValue}\n               onChange={handleChange}\n               displayEmpty\n               className={classes.selectEmpty}\n               inputProps={{ \"aria-label\": \"Without label\" }}\n            >\n               <MenuItem value=\"\">Global</MenuItem>\n               {data[0] &&\n                  data.map((country) => (\n                     <MenuItem\n                        key={country.country}\n                        value={country.countryInfo.iso2}\n                     >\n                        {country.country}\n                     </MenuItem>\n                  ))}\n            </Select>\n         </FormControl>\n      </div>\n   );\n}\n","import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\nconst BarGrap = ({ data }) => {\n   const { cases, recovered, deaths, country } = data;\n   return (\n      <div>\n         <Bar\n            data={{\n               labels: [\"Infected\", \"Recovered\", \"Deaths\"],\n               datasets: [\n                  {\n                     label: \"People\",\n                     backgroundColor: [\n                        \"rgba(0,0,255,0.5)\",\n                        \"rgba(0,255,0,0.5)\",\n                        \"rgba(255,0,0,0.5)\",\n                     ],\n                     data: [cases, recovered, deaths],\n                  },\n               ],\n            }}\n            options={{\n               legend: { display: false },\n               title: { display: true, text: `Current state in ${country}` },\n            }}\n         />\n      </div>\n   );\n};\n\nexport default BarGrap;\n","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nconst LineGrap = ({ data }) => {\n   return (\n      <Line\n         data={{\n            labels: data.map(({ date }) => date),\n            datasets: [\n               {\n                  data: data.map(({ confirmed }) => confirmed),\n                  label: \"Infected\",\n                  borderColor: \"#3333ff\",\n                  fill: true,\n               },\n               {\n                  data: data.map(({ deaths }) => deaths),\n                  label: \"Deaths\",\n                  borderColor: \"red\",\n                  backgroundColor: \"rgba(255,0,0,0.5)\",\n                  fill: true,\n               },\n            ],\n         }}\n      />\n   );\n};\n\nexport default LineGrap;\n","import React, { useState, useEffect } from \"react\";\nimport { fetchTotalData, fetchData } from \"../../api\";\nimport BarGrap from \"./BarGrap\";\nimport LineGrap from \"./LineGrap\";\n\nconst bieldChartData = (data) => {\n   let ChartData = [];\n   let lastDataPoint;\n   for (let date in data.cases) {\n      if (lastDataPoint) {\n         let newDataPoint = {\n            date,\n            confirmed: data.cases[date] - lastDataPoint.cases,\n            recovered: data.recovered[date] - lastDataPoint.deaths,\n            deaths: data.deaths[date] - lastDataPoint.deaths,\n         };\n         ChartData.push(newDataPoint);\n      }\n      lastDataPoint = {\n         cases: data.cases[date],\n         recovered: data.recovered[date],\n         deaths: data.deaths[date],\n      };\n   }\n   return ChartData;\n};\n\nexport default ({ country }) => {\n   const [data, setData] = useState([]);\n\n   useEffect(() => {\n      if (country) {\n         fetchData(country).then((data) => {\n            if (data.error) {\n               console.log(data.error);\n            } else {\n               setData(data);\n            }\n         });\n      } else {\n         fetchTotalData().then((data) => {\n            if (data.error) {\n               console.log(data.error);\n            } else {\n               setData(bieldChartData(data));\n            }\n         });\n      }\n   }, [country]);\n\n   return (\n      <>\n         {data[0] && (country ? null : <LineGrap data={data} />)}\n         {data.cases && (country ? <BarGrap data={data} /> : null)}\n      </>\n   );\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\n\nconst useStyles = makeStyles((theme) => ({\n   root: {\n      width: \"370px\",\n      margin: \"0 auto\",\n      \"& > * + *\": {\n         marginTop: theme.spacing(2),\n      },\n   },\n}));\n\nexport default function Progress() {\n   const classes = useStyles();\n\n   return (\n      <div className={classes.root}>\n         <LinearProgress />\n      </div>\n   );\n}\n","import React from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst StyledTableCell = withStyles((theme) => ({\n   head: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.common.white,\n   },\n   body: {\n      fontSize: 14,\n   },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n   root: {\n      \"&:nth-of-type(odd)\": {\n         backgroundColor: theme.palette.action.hover,\n      },\n   },\n}))(TableRow);\n\nconst useStyles = makeStyles((theme) => ({\n   container: {\n      height: \"46vw\",\n      [theme.breakpoints.down(\"sm\")]: {\n         height: \"800px\",\n      },\n   },\n   table: {\n      minWidth: \"100%\",\n   },\n}));\n\nexport default function CustomizedTables({ data }) {\n   const classes = useStyles();\n   return (\n      <TableContainer className={classes.container} component={Paper}>\n         <Table\n            className={classes.table}\n            size=\"small\"\n            stickyHeader\n            aria-label=\"sticky table\"\n         >\n            <TableHead>\n               <TableRow>\n                  <StyledTableCell>Countries</StyledTableCell>\n                  <StyledTableCell align=\"right\">Infected</StyledTableCell>\n                  <StyledTableCell align=\"right\">Active</StyledTableCell>\n                  <StyledTableCell align=\"right\">Deaths</StyledTableCell>\n               </TableRow>\n            </TableHead>\n            <TableBody>\n               {data[0] &&\n                  data.map((country) => (\n                     <StyledTableRow key={country.country}>\n                        <StyledTableCell component=\"th\" scope=\"row\">\n                           {country.country}\n                        </StyledTableCell>\n                        <StyledTableCell align=\"right\">\n                           {country.cases}\n                        </StyledTableCell>\n                        <StyledTableCell align=\"right\">\n                           {country.active}\n                        </StyledTableCell>\n                        <StyledTableCell align=\"right\">\n                           {country.deaths}\n                        </StyledTableCell>\n                     </StyledTableRow>\n                  ))}\n            </TableBody>\n         </Table>\n      </TableContainer>\n   );\n}\n","import React, { Component } from \"react\";\nimport { Container, Grid } from \"@material-ui/core\";\nimport CovidLogo from \"./images/image.png\";\nimport { fetchData, fetchCountries } from \"./api\";\nimport { Cards, CountryPicker, Chart } from \"./components\";\nimport styles from \"./App.module.css\";\nimport Progress from \"./components/Progress\";\nimport Tables from \"./components/Tables\";\n\nclass App extends Component {\n   state = {\n      data: {},\n      countriesData: [],\n      loading: true,\n      country: \"\",\n   };\n\n   initData = (country) => {\n      fetchData(country).then((data) => {\n         if (data.error) {\n            console.log(data.error);\n         } else {\n            this.setState({ data });\n         }\n      });\n   };\n\n   fetchCountriesData = () => {\n      fetchCountries().then((data) => {\n         if (data.error) {\n            console.log(data.error);\n         } else {\n            this.setState({ countriesData: data, loading: false });\n         }\n      });\n   };\n\n   componentDidMount() {\n      this.initData();\n      this.fetchCountriesData();\n   }\n\n   countryPickerHandler = (country) => {\n      this.initData(country);\n      this.setState({ country });\n   };\n\n   render() {\n      const { loading, country, countriesData } = this.state;\n      return (\n         <Container maxWidth=\"xl\">\n            <div className={styles.logoContainer}>\n               <img src={CovidLogo} className={styles.logoImage} alt=\"...\" />\n            </div>\n            {loading ? (\n               <Progress />\n            ) : (\n               <>\n                  <Grid container spacing={3}>\n                     <Grid item md={8} sm={6} xs={12}>\n                        <Cards data={this.state.data} />\n                        <CountryPicker\n                           data={countriesData}\n                           onHandler={this.countryPickerHandler}\n                        />\n                        <Chart country={country} />\n                     </Grid>\n                     <Grid item md={4} sm={6} xs={12}>\n                        <Tables data={countriesData} />\n                     </Grid>\n                  </Grid>\n               </>\n            )}\n         </Container>\n      );\n   }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n   <React.StrictMode>\n      <App />\n   </React.StrictMode>,\n   document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logoContainer\":\"App_logoContainer__UKLdd\",\"logoImage\":\"App_logoImage__2BJCE\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}